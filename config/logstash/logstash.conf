input {
    beats {
        port => 5044
    }
}

filter {
	if "nginx-access" in [tags] {
		grok {
			patterns_dir => ["/usr/share/logstash/pipeline/patterns"]
			match => {"message" => ["%{NGINXACCESS}"]}
			remove_field => "message"
		}
		mutate {
			add_field => { "read_timestamp" => "%{@timestamp}" }
		}
		date {
			match => [ "[nginx][access][time]", "dd/MMM/YYYY:H:m:s Z" ]
			remove_field => "[nginx][access][time]"
		}
		useragent {
			source => "[nginx][access][agent]"
			target => "[nginx][access][user_agent]"
			remove_field => "[nginx][access][agent]"
		}
	}
	else if "nginx-error" in [tags] {
		grok {
			patterns_dir => ["/usr/share/logstash/pipeline/patterns"]
			match => { "message" => ["%{NGINXERROR}"] }
			remove_field => "message"
		}
		mutate {
			rename => { "@timestamp" => "read_timestamp" }
		}
		date {
			match => [ "[nginx][error][time]", "YYYY/MM/dd H:m:s" ]
			remove_field => "[nginx][error][time]"
		}
	}
	else if "gin" in [tags] {
		grok {
			patterns_dir => ["/usr/share/logstash/pipeline/patterns"]
			match => {"message" => ["%{GINLOG}"]}
			remove_field => "message"
			remove_field => "[gin][type]"
		}
		mutate {
			add_field => { "read_timestamp" => "%{@timestamp}" }
		}
		date {
			match => [ "[gin][time]", "yyyy/MM/dd - HH:mm:ss" ]
			remove_field => "[gin][time]"
		}
	}
}

output {
	stdout {
		codec => rubydebug
	}
	elasticsearch {
		action => "index"
		hosts => ["${ES_IP:=localhost}:9200"]
		manage_template => false
		index => "%{[@metadata][beat]}-%{[@metadata][version]}-%{+YYYY.MM.dd}"
	}
}